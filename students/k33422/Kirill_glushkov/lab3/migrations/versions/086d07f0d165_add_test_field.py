"""add test field

Revision ID: 086d07f0d165
Revises: bece710a7866
Create Date: 2024-05-31 20:13:26.053768

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql
import sqlmodel

# revision identifiers, used by Alembic.
revision: str = '086d07f0d165'
down_revision: Union[str, None] = 'bece710a7866'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_userregister_username', table_name='userregister')
    op.drop_table('userregister')
    op.drop_index('ix_userregisterresponse_username', table_name='userregisterresponse')
    op.drop_table('userregisterresponse')
    op.add_column('transactions', sa.Column('test_field', sqlmodel.sql.sqltypes.AutoString(), nullable=True))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('transactions', 'test_field')
    op.create_table('userregisterresponse',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='userregisterresponse_pkey')
    )
    op.create_index('ix_userregisterresponse_username', 'userregisterresponse', ['username'], unique=False)
    op.create_table('userregister',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='userregister_pkey')
    )
    op.create_index('ix_userregister_username', 'userregister', ['username'], unique=False)
    # ### end Alembic commands ###
